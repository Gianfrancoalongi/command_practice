#!/bin/bash

main()
{
	show_description
	dump_text_to_files
}

show_description()
{
cat <<EOF
    = Bits and Pieces =
    This exercise practices substring extraction and string manipulation.
    You are expected to complete the exercise, by using tr | cut | sed | grep.
EOF
}

dump_text_to_files()
{
    ROOT=$(mktemp --tmpdir=. -d)
    create_service_example_file
    create_wrapped_data_example_file
    create_moving_target_example_file
}

create_service_example_file()
{
    FILE=${ROOT}/service.xmpl
    DATA=( \
	'adam_2h-23m-21s_192.168.0.1_call,bridge' \
	'david_0h-2m-10s_192.169.0.2_call,bridge' \
	'john_1h-3m-1s_192.169.0.3_call' \
	'filip_2h-4m-45s_192.168.0.4_call,bridge,conference' \
	'susan_3h-34m-28s_192.165.0.3_call,music' \
	'ellie_5h-43m-49s_192.165.0.2_call,music,conference' \
	'michelle_1h-23m-21s_192.165.0.1_call' \
 	)
    OLD_IFS=${IFS}
    for data in ${DATA[*]}
    do
	IFS='_'
	printf "user:%s runtime:%s from:%s services:%s\n" ${data} >> ${FILE}
    done
    IFS=${OLD_IFS}
}

create_wrapped_data_example_file()
{
    FILE=${ROOT}/extract.xmpl
    DATA=( \
	'anna_23_23428394739247328974' \
	'berit_10_2389798274972398472' \
	'olof_38_32899237982789748239' \
	'johan_12_8324879237843278493' \
	'bering_21_289398429374293729' \
	'gunther_38_28737239982378399' \
	'armin_32_9823892898328928939' \
	'arnold_12_928392839898238933' \
	)
    OLD_IFS=${IFS}
    for data in ${DATA[*]}
    do
	IFS='_'
	printf "<$(date)>,[%s],(%s):<%s>\n" ${data} >> ${FILE}
    done
    IFS=${OLD_IFS}
}

create_moving_target_example_file()
{
    FILE=${ROOT}/moving.xmpl
    DATA=( \
	'1223_20237_28732_1122' \
	'2737_23873_27933_2983' \
	'9889_23839_39829_3829' \
	'2829_28992_21212_2892' \
	'1218_12819_83221_9172' \
	'1282_83123_71212_9128' \
	'9888_89831_81911_8171' \
	)
    OLD_IFS=${IFS}
    for data in ${DATA[*]}
    do
	for i in {1..4}
	do 
	    data=${data/_/$(random_amount_of_separators)}
	done
	echo ${data} >> ${FILE}
    done
}

random_amount_of_separators()
{
    AMOUNT=$((1 + ${RANDOM} % 10))
    SEP='-'
    RET=''
    for((x=0;x<${AMOUNT};x++))
    do
	RET=${RET}${SEP}
    done
    echo ${RET}
}

main